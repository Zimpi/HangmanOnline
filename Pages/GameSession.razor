@page "/session/{SessionGuid:guid}/{PlayerGuid:guid}"
@inject Manager Manager
@inject ISnackbar Snackbar
@inject NavigationManager NavigationManager
@implements IDisposable


<h3>GameSession</h3>

@code {

    [Parameter]
    public Guid SessionGuid { get; set; }

    [Parameter]
    public Guid PlayerGuid { get; set; }

    public Session? CurrentSession { get; set; }

    public Player? Me { get; set; }

    public bool IsHost { get; set; }

    protected override void OnInitialized()
    {
        base.OnInitialized();

        var session = Manager.GetSession(SessionGuid);
        if (session == null)
        {
            Snackbar.Add($"Diese Session wurde nicht gefunden oder existiert nicht mehr!", Severity.Error);
            NavigationManager.NavigateTo("/");
            return;
        }

        if (session.Host.PlayerId == PlayerGuid)
        {
            Me = session.Host;
            IsHost = true;
        }
        else
        {
            var player = session.GetPlayer(PlayerGuid);
            if (player == null)
            {
                Snackbar.Add($"Dieser Spieler wurde nicht gefunden oder existiert nicht mehr!", Severity.Error);
                NavigationManager.NavigateTo("/");
                return;
            }
            Me = player;
        }

        CurrentSession = session;
        CurrentSession.MessageReceived += MessageReceived;
        CurrentSession.PlayerAdded += PlayerAdded;
        CurrentSession.PlayerRemoved += PlayerRemoved;
    }

    private void PlayerRemoved(string playerName)
    {
        Snackbar.Add($"{playerName} hat die Session verlassen", Severity.Warning);
    }

    private void PlayerAdded(Player obj)
    {
        Snackbar.Add($"{obj.PlayerName} ist der Session beigetreten", Severity.Info);
    }

    private void MessageReceived(string nachricht, Severity type)
    {
        Snackbar.Add(nachricht, type);
    }

    public void Dispose()
    {
        Snackbar?.Dispose();
        if (Me != null)
            CurrentSession?.RemovePlayer(Me.PlayerId);
    }

}
